<?php
declare(strict_types=1);

namespace App\Utility;

use RuntimeException;

class SkillNameGroup
{
    /**
     *  Heuristic for grouping a list of skill names.
     *  Try to group skills that are progression steps of each other.
     *
     *  Individual skills with 'A', 'B' and 'C' in them get merged into one
     *  entry with 'A+B+C'.  And also adding up their xp cost.
     *  So 'lifeforce A (1)' and 'lifeforce B (2)' become 'lifeforce A+B (3)'.
     *
     *  Some skills have specifier behind them, merge only if they match.
     *  So 'priest A (purity) (4)' and 'priest B (mind) (4)' won't merge.
     *  And 'priest A (purity) (4)' and 'priest B (purity) (4)' will become
     *  'priest A+B (purity) (8)'
     *
     *  The skill names must be generated by CharactersSkill::printableName,
     *  otherwise pattern match failures will happen.
     *
     * @param array $skills List of skill names.
     * @return array List of skills, with skill trees are grouped.
     */
    public static function group(array $skills): array
    {
        // split each skill name, grouping by 'middle' last
        $group = [];
        foreach ($skills as $skill) {
            [$prefix, $middle, $postfix, $xp] = self::splitter($skill);

            if (!isset($group[$prefix])) {
                $group[$prefix] = [];
            }
            if (!isset($group[$prefix][$postfix])) {
                $group[$prefix][$postfix] = [];
            }

            $group[$prefix][$postfix][$middle] = $xp;
        }

        $result = [];
        // reconstruct the skill names, grouping the middle parts
        foreach ($group as $prefix => $group1) {
            foreach ($group1 as $postfix => $group2) {
                $middles = [];
                $xp_total = 0;
                foreach ($group2 as $middle => $xp) {
                    $xp_total += $xp;
                    if (!empty($middle)) {
                        $middles[] = $middle;
                    }
                }

                $name = $prefix;
                if (!empty($middles)) {
                    $name .= ' ' . implode('+', $middles);
                }
                if (!empty($postfix)) {
                    $name .= ' ' . $postfix;
                }
                $name .= ' (' . $xp_total . ')';
                $result[] = $name;
            }
        }

        return $result;
    }

    /**
     *  Splits a skill name into prefix, middle, postfix and xp.
     *
     *  Input is a skill name formatted by CharactersSkill::printableName()
     *
     *  Exmaples:
     *    'ambidexterity (2)'   has just a prefix and xp, rest is ''
     *    'lifefoce B (2)'      has a middle 'B'
     *    'priest A (mind) (4)' has middle 'A' and postfix '(mind)'
     *
     * @param string $name The skill name to split.
     * @return array List with [prefix, middle, postfix, xp]
     */
    protected static function splitter(string $name): array
    {
        $pattern = '/^(.*?)(?: (\w\w?\w?))? ?(\(.*\))? \((\d*)\)$/';
        if (!preg_match($pattern, $name, $matches)) {
            throw new RuntimeException("pattern match failure on $name");
        }

        array_shift($matches);
        $matches[3] = (int)$matches[3];

        return $matches;
    }
}
